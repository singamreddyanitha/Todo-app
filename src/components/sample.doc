import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import store from './store'; // Assuming you have a store.js file
import App from './App';

ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>,
  document.getElementById('root')
);

// TodoItem.js
import React from "react";
import { useDispatch } from "react-redux";
import { deleteTodo, editTodo, toggleFavorite, toggleTodo } from "../todoSlice";
import { HiHeart, HiOutlineHeart } from "react-icons/hi";
import { BiEdit } from "react-icons/bi";
import { RiDeleteBin6Line } from "react-icons/ri";
import "./index.css";

const TodoItem = ({ todoDetails }) => {
  const dispatch = useDispatch();
  const { input, id, isChecked, isLiked } = todoDetails;

  const onCheckbox = () => {
    dispatch(toggleTodo(id));
  };

  const onEditIcon = () => {
    const editedText = prompt("Edit your task", input);
    if (editedText !== null) {
      dispatch(editTodo({ id, input: editedText }));
    }
  };

  const onDeleteIcon = () => {
    if(window.confirm('Are you sure you want to delete this task?')) {
      dispatch(deleteTodo(id));
    }
  };

  const onLikeIcon = () => {
    dispatch(toggleFavorite(id));
  };

  const checkboxLabel = isChecked ? "checkbox-labelline" : "checkbox-label";

  return (
    <li className="list-item">
      <input
        type="checkbox"
        id={id}
        className="checkbox-input"
        checked={isChecked}
        onChange={onCheckbox}
      />
      <div className="label-container">
        <label className={checkboxLabel} htmlFor={id}>
          {input}
        </label>
        <div className="icons-container">
          {isLiked ? (
            <HiHeart className="icon" onClick={onLikeIcon} />
          ) : (
            <HiOutlineHeart className="icon" onClick={onLikeIcon} />
          )}
          <BiEdit className="icon" onClick={onEditIcon} />
          <RiDeleteBin6Line className="icon" onClick={onDeleteIcon} />
        </div>
      </div>
    </li>
  );
};

export default TodoItem;



// TodoList.js
import React, {  useEffect, useState } from "react";
import {useDispatch, useSelector} from "react-redux";
import TodoItem from "../TodoItem";
import { addTodo } from "../todoSlice";

const TodoList = () => {
    const [inputTask, setInput] = useState("");
    const dispatch = useDispatch();
    const todoList = useSelector(state => state.todos);
    // console.log(input);

    useEffect(() => {
        const stringifiedTodoList = localStorage.getItem("todoList");
        const parsedTodoList = JSON.parse(stringifiedTodoList);

        if(parsedTodoList !== null) {
            dispatch(addTodo(parsedTodoList))
        } 
    }, [dispatch])


    const onInputChange = (e) => {
        setInput(e.target.value);

    }

    const onAdd = () => {
        if(inputTask === "") {
            alert("Enter valid text");
            return;
        }
        dispatch(addTodo(inputTask));
        setInput("");
    }

    const onSave = () => {
      localStorage.setItem("todoList", JSON.stringify(todoList));
        alert("Todos saved!")
    }

  return (
    <div className="todos-bg-container">
      <h1 className="todos-heading">Todos</h1>
      <h1 className="create-task-heading">
        Create <span className="create-task-heading-subpart">Task</span>
      </h1>
      <input
        type="text"
        className="todo-user-input"
        placeholder="What needs to be done?"
        onChange={onInputChange}
        value={inputTask}
      />
      <button className="button" type="button" onClick={onAdd}>
        Add
      </button>
      <ul className="list-container">
        {todoList.map(eachTodo => (
            <TodoItem key = {eachTodo.id} todoDetails = {eachTodo} />
        ))}
      </ul>
      <button type = "button" className="button" onClick={onSave}>Save</button>
    </div>
  );
};

export default TodoList;



// todosSlice.js
import {createSlice} from "@reduxjs/toolkit";
import {v4 as uuid} from "uuid";


const initialState = [];

const todosSlice = createSlice({
    name: "todos",
    initialState,
    reducers: {
        addTodo : {
            reducer(state, action) {
                state.push(action.payload);
            },
            prepare(input) {
                return {
                    payload: {input, id: uuid(), 
                        isChecked: false, isLiked: false,
                    isEdit: false} };
            },

        },

        toggleTodo(state, action) {
            const todo = state.find(todo => todo.id === action.payload);
            if(todo) {
                todo.isChecked = !todo.isChecked;
            }
        },

        toggleFavorite(state, action) {
            const todo = state.find(todo => todo.id === action.payload)
            if(todo) {
                todo.isLiked = !todo.isLiked;
            }
        },
        editTodo(state, action) {
            const todo = state.find(todo => todo.id === action.payload.id);
            if (todo) {
                todo.input = action.payload.input;
            }
        },

        deleteTodo(state, action) {
            return state.filter(todo => todo.id !== action.payload);
        },
    },
});

export const {addTodo, toggleFavorite, toggleTodo, editTodo, deleteTodo} = todosSlice.actions;

export default todosSlice.reducer;

// store.js
import { configureStore } from '@reduxjs/toolkit';
import todosReducer from './todosSlice';

export default configureStore({
  reducer: {
    todos: todosReducer,
  },
});


